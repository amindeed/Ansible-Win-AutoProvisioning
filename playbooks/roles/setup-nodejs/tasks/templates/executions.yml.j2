---
- name: "Start Executions (if any)..."
  meta: noop

{% for item in execs %}

{# ︵‿︵‿︵‿︵‿ Run PowerShell Scripts ︵‿︵‿︵‿︵‿ #}
{% if item == 'run_ps1_script' %}
{% for job in execs['run_ps1_script'] %}

{% if job.file_text_content | default("") == "" %} {# X #}
{% if job.file_full_url is defined or job.file_relative_url is defined %} {# XX #}

- name: "{{ label }} ({{ loop.index }}/{{ loop.length }}) Check if authentication is required for script file download"
  win_shell: |
{% if job.file_full_url is defined and job.file_full_url is not none %}
    $url = "{{ job.file_full_url }}"
{% elif job.file_relative_url is defined and job.file_relative_url is not none %}
    $url = "{% raw %}{{ pkgs_repo_base_url }}{% endraw %}/{{ job.file_relative_url }}"
{% endif %}
    $responseStatusCode = $(try { Invoke-WebRequest -Uri $url -Method Head -UseBasicParsing | % {$_.StatusCode} } catch {$_.Exception.Response.StatusCode.Value__})

    if ($responseStatusCode -eq 401) { 
        Write-Host "Auth required" 
    } else { 
        Write-Host "Auth not required" 
    }
  register: auth_check
  changed_when: false
  no_log: true

{% set file_url = job.file_full_url | default(job.file_relative_url) %}

- name: "{{ label }} ({{ loop.index }}/{{ loop.length }}) Download \"{{ file_url.split('/')[-1] }}\" (with authentication)"
  win_get_url:
{% if job.file_full_url is defined and job.file_full_url is not none %}
    url: "{{ job.file_full_url }}"
    dest: '{% raw %}{{ win_temp_dir_path }}{% endraw %}\{{ job.file_full_url.split("/")[-1] }}'
{% elif job.file_relative_url is defined and job.file_relative_url is not none %}
    url: "{% raw %}{{ pkgs_repo_base_url }}{% endraw %}/{{ job.file_relative_url }}"
    dest: '{% raw %}{{ win_temp_dir_path }}{% endraw %}\{{ job.file_relative_url.split("/")[-1] }}'
{% endif %}
    username: "{{ job.http_auth_username | default('{{ http_auth_username }}') }}"
    password: "{{ job.http_auth_password | default('{{ http_auth_password }}') }}"
  when: "'Auth required' in auth_check.stdout"


- name: "{{ label }} ({{ loop.index }}/{{ loop.length }}) Download \"{{ file_url.split('/')[-1] }}\" (without authentication)"
  win_get_url:
{% if job.file_full_url is defined and job.file_full_url is not none %}
    url: "{{ job.file_full_url }}"
    dest: '{% raw %}{{ win_temp_dir_path }}{% endraw %}\{{ job.file_full_url.split("/")[-1] }}'
{% elif job.file_relative_url is defined and job.file_relative_url is not none %}
    url: "{% raw %}{{ pkgs_repo_base_url }}{% endraw %}/{{ job.file_relative_url }}"
    dest: '{% raw %}{{ win_temp_dir_path }}{% endraw %}\{{ job.file_relative_url.split("/")[-1] }}'
{% endif %}
  when: "'Auth not required' in auth_check.stdout"

{% endif %} {# XX #}
{% endif %} {# X #}

{% if job.working_directory is defined and job.working_directory is not none %}
- name: "{{ label }} ({{ loop.index }}/{{ loop.length }}) Check provided working directory for script execution"
  win_file:
    path: '{{ job.working_directory }}'
    state: directory
{% endif %}

{% if job.file_text_content is defined %}
- name: "{{ label }} ({{ loop.index }}/{{ loop.length }}) Run user-provided script ({{ job.description | default('') }})"
  win_shell: |
{{ job.file_text_content | indent(width=4, indentfirst=True) }}
{% else %}
- name: "{{ label }} ({{ loop.index }}/{{ loop.length }}) Run the script \"{{ file_url.split('/')[-1] }}\""
  win_shell: '{% raw %}{{ win_temp_dir_path }}{% endraw %}\{{ file_url.split("/")[-1] }} {{ job.arguments | default("") }}'
{% if job.working_directory is defined and job.working_directory is not none %}
  args:
    chdir: {{ job.working_directory }}
{% endif %}
{% endif %}
  register: script_result
  changed_when: script_result.rc == 0 and 'OK_CHANGE' in script_result.stdout
  failed_when: script_result.rc != 0 or 'KO_FAILURE' in script_result.stdout
  ignore_errors: {% if job.abort_on_failure is defined and job.abort_on_failure %}no{% else %}yes{% endif %}
    
{% endfor %} {# ~-~-~ END: for job in execs['run_ps1_script'] ~-~-~ #}
{% endif %} {# ~-~-~ END: if item == 'run_ps1_script' ~-~-~ #}


{# ︵‿︵‿︵‿︵‿ Run Executable Files ︵‿︵‿︵‿︵‿ #}
{% if item == 'run_executable' %}
{% for job in execs['run_executable'] %}
{#
...
...
#}
{% endfor %} {# ~-~-~ END: for job in execs['run_executable'] ~-~-~ #}
{% endif %} {# ~-~-~ END: if item == 'run_executable' ~-~-~ #}

{% endfor %}
